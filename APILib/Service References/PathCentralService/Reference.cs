//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalAPILib.PathCentralService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}", ConfigurationName="PathCentralService.NGSServiceSoap")]
    public interface NGSServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByAccessionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LabMessageQueryXML_GetByAccessionID(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByAccessionID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByAccessionIDAsync(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByCaseID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LabMessageQueryXML_GetByCaseID(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByCaseID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByCaseIDAsync(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByCaseNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LabMessageQueryXML_GetByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageQueryXML_Get" +
            "ByCaseNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageXML_GetByCom" +
            "pletedDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LabMessageXML_GetByCompletedDate(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageXML_GetByCom" +
            "pletedDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabMessageXML_GetByCompletedDateAsync(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageXML_GetByOrd" +
            "eredDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LabMessageXML_GetByOrderedDate(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/LabMessageXML_GetByOrd" +
            "eredDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LabMessageXML_GetByOrderedDateAsync(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetChangedEntityIDs_By" +
            "EntityType", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChangedEntityIDs_ByEntityType(System.DateTime StartDate, System.DateTime EndDate, string EntityType, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetChangedEntityIDs_By" +
            "EntityType", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChangedEntityIDs_ByEntityTypeAsync(System.DateTime StartDate, System.DateTime EndDate, string EntityType, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/AccessRequisitionForm_" +
            "ByAccessionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet AccessRequisitionForm_ByAccessionID(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/AccessRequisitionForm_" +
            "ByAccessionID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> AccessRequisitionForm_ByAccessionIDAsync(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetClients_ByClientID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetClients_ByClientID(int ClientID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetClients_ByClientID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClients_ByClientIDAsync(int ClientID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetClients_ByClientNam" +
            "e", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetClients_ByClientName(string ClientName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetClients_ByClientNam" +
            "e", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClients_ByClientNameAsync(string ClientName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatients_ByDOB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatients_ByDOB(System.DateTime DOB, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatients_ByDOB", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPatients_ByDOBAsync(System.DateTime DOB, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICD9Diagnosis_GetByCas" +
            "eNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ICD9Diagnosis_GetByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICD9Diagnosis_GetByCas" +
            "eNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ICD9Diagnosis_GetByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICD10Diagnosis_GetByCa" +
            "seNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ICD10Diagnosis_GetByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICD10Diagnosis_GetByCa" +
            "seNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ICD10Diagnosis_GetByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICDDiagnosis_GetByTest" +
            "OrderID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ICDDiagnosis_GetByTestOrderID(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/ICDDiagnosis_GetByTest" +
            "OrderID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ICDDiagnosis_GetByTestOrderIDAsync(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Entities_GetByTestOrde" +
            "rID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Entities_GetByTestOrderID(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Entities_GetByTestOrde" +
            "rID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> Entities_GetByTestOrderIDAsync(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderDetails_GetBy" +
            "CaseID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TestOrderDetails_GetByCaseID(int Caseid, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderDetails_GetBy" +
            "CaseID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TestOrderDetails_GetByCaseIDAsync(int Caseid, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderDetails_GetBy" +
            "CaseNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TestOrderDetails_GetByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderDetails_GetBy" +
            "CaseNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TestOrderDetails_GetByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetResult_ByTestOrderI" +
            "D_ComponentCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetResult_ByTestOrderID_ComponentCode(int TestOrderID, string ComponentCode, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetResult_ByTestOrderI" +
            "D_ComponentCode", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetResult_ByTestOrderID_ComponentCodeAsync(int TestOrderID, string ComponentCode, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllResults(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllResults", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllResultsAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/OrderedSpecimenDetails" +
            "_ByTestOrderID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet OrderedSpecimenDetails_ByTestOrderID(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/OrderedSpecimenDetails" +
            "_ByTestOrderID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> OrderedSpecimenDetails_ByTestOrderIDAsync(int TestOrderID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderSpecimenID_Ge" +
            "tByCaseID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet TestOrderSpecimenID_GetByCaseID(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/TestOrderSpecimenID_Ge" +
            "tByCaseID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> TestOrderSpecimenID_GetByCaseIDAsync(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllEntity_ByOrderDa" +
            "te", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllEntity_ByOrderDate(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllEntity_ByOrderDa" +
            "te", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllEntity_ByOrderDateAsync(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllEntity_ByAccessi" +
            "onID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllEntity_ByAccessionID(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllEntity_ByAccessi" +
            "onID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllEntity_ByAccessionIDAsync(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByAcces" +
            "sionID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPayorDetail_ByAccessionID(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByAcces" +
            "sionID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByAccessionIDAsync(int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByCaseI" +
            "D", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPayorDetail_ByCaseID(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByCaseI" +
            "D", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByCaseIDAsync(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByPayor" +
            "ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPayorDetail_ByPayorID(int PayorID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPayorDetail_ByPayor" +
            "ID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByPayorIDAsync(int PayorID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_ByCaseID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSpecimen_ByCaseID(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_ByCaseID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_ByCaseIDAsync(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_ByCaseNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSpecimen_ByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_ByCaseNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_ByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_BySpecimen" +
            "ID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSpecimen_BySpecimenID(int SpecimenID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetSpecimen_BySpecimen" +
            "ID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_BySpecimenIDAsync(int SpecimenID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllFacility_ByFacil" +
            "ityName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllFacility_ByFacilityName(string FacilityName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllFacility_ByFacil" +
            "ityName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllFacility_ByFacilityNameAsync(string FacilityName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Facility_Create_Update" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Facility_Create_Update(
                    int FacilityID, 
                    string FacilityName, 
                    int ClientID, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string PhoneTypeBusiness, 
                    string BusinessPhoneNumber, 
                    string BusinessExtension, 
                    string PhoneTypeFax, 
                    string FaxPhoneNumber, 
                    string ContactName, 
                    int UserID, 
                    string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Facility_Create_Update" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Facility_Create_UpdateAsync(
                    int FacilityID, 
                    string FacilityName, 
                    int ClientID, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string PhoneTypeBusiness, 
                    string BusinessPhoneNumber, 
                    string BusinessExtension, 
                    string PhoneTypeFax, 
                    string FaxPhoneNumber, 
                    string ContactName, 
                    int UserID, 
                    string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctors_byName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FindDoctors_byName(string FirstName, string LastName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctors_byName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FindDoctors_byNameAsync(string FirstName, string LastName, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctor_byDoctorID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FindDoctor_byDoctorID(int DoctorID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctor_byDoctorID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FindDoctor_byDoctorIDAsync(int DoctorID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctor_byNPI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FindDoctor_byNPI(string NPI, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/FindDoctor_byNPI", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FindDoctor_byNPIAsync(string NPI, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByMRN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatient_ByMRN(string MRN, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByMRN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByMRNAsync(string MRN, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByPatientSt" +
            "atus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatient_ByPatientStatus(string PatientStatus, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByPatientSt" +
            "atus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByPatientStatusAsync(string PatientStatus, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByPatientID" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPatient_ByPatientID(int PatientID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetPatient_ByPatientID" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByPatientIDAsync(int PatientID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetCases_ByCaseNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCases_ByCaseNo(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetCases_ByCaseNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCases_ByCaseNoAsync(string CaseNo, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetCaseNo_ByCaseID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCaseNo_ByCaseID(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetCaseNo_ByCaseID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCaseNo_ByCaseIDAsync(int CaseID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllCaseNo_ByOrderDa" +
            "teRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAllCaseNo_ByOrderDateRange(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/GetAllCaseNo_ByOrderDa" +
            "teRange", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllCaseNo_ByOrderDateRangeAsync(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_HomePlanInsurance" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Save_HomePlanInsurance(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_HomePlanInsurance" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Save_HomePlanInsuranceAsync(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_HomePlanInsuran" +
            "ce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update_HomePlanInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_HomePlanInsuran" +
            "ce", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Update_HomePlanInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_HomePlanInsuran" +
            "ce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Delete_HomePlanInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_HomePlanInsuran" +
            "ce", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Delete_HomePlanInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_PayorGroupInsuran" +
            "ce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Save_PayorGroupInsurance(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_PayorGroupInsuran" +
            "ce", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Save_PayorGroupInsuranceAsync(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_PayorGroupInsur" +
            "ance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update_PayorGroupInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_PayorGroupInsur" +
            "ance", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Update_PayorGroupInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_PayorGroupInsur" +
            "ance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Delete_PayorGroupInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_PayorGroupInsur" +
            "ance", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Delete_PayorGroupInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_PlanTypeInsurance" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Save_PlanTypeInsurance(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Save_PlanTypeInsurance" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Save_PlanTypeInsuranceAsync(string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_PlanTypeInsuran" +
            "ce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Update_PlanTypeInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Update_PlanTypeInsuran" +
            "ce", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Update_PlanTypeInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_PlanTypeInsuran" +
            "ce", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int Delete_PlanTypeInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/Delete_PlanTypeInsuran" +
            "ce", ReplyAction="*")]
        System.Threading.Tasks.Task<int> Delete_PlanTypeInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/PatientInsuranceInfo_C" +
            "reate_Update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int PatientInsuranceInfo_Create_Update(
                    int PatientInsuranceID, 
                    int PatientID, 
                    int InsuranceID, 
                    int HomePlanInsuranceID, 
                    int PayorGroupInsuranceID, 
                    int PlanTypeInsuranceID, 
                    int Rank, 
                    string PolicyNo, 
                    string GroupNo, 
                    string AuthorizationNo, 
                    string ProviderPatientID, 
                    string LastName, 
                    string FirstName, 
                    string MiddleName, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    System.DateTime DOB, 
                    string SSN, 
                    string Relation, 
                    string phonenumber, 
                    string Referral, 
                    int UserID, 
                    int AccessionID, 
                    string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/PatientInsuranceInfo_C" +
            "reate_Update", ReplyAction="*")]
        System.Threading.Tasks.Task<int> PatientInsuranceInfo_Create_UpdateAsync(
                    int PatientInsuranceID, 
                    int PatientID, 
                    int InsuranceID, 
                    int HomePlanInsuranceID, 
                    int PayorGroupInsuranceID, 
                    int PlanTypeInsuranceID, 
                    int Rank, 
                    string PolicyNo, 
                    string GroupNo, 
                    string AuthorizationNo, 
                    string ProviderPatientID, 
                    string LastName, 
                    string FirstName, 
                    string MiddleName, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    System.DateTime DOB, 
                    string SSN, 
                    string Relation, 
                    string phonenumber, 
                    string Referral, 
                    int UserID, 
                    int AccessionID, 
                    string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/PatientInsuranceInfo_D" +
            "elete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void PatientInsuranceInfo_Delete(int PatientInsuranceID, int AccessionID, string RequestMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="apvx:bus:NGSService:{807BD926-2E5A-4636-B5C7-2D202CE47F03}/PatientInsuranceInfo_D" +
            "elete", ReplyAction="*")]
        System.Threading.Tasks.Task PatientInsuranceInfo_DeleteAsync(int PatientInsuranceID, int AccessionID, string RequestMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NGSServiceSoapChannel : SignalAPILib.PathCentralService.NGSServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NGSServiceSoapClient : System.ServiceModel.ClientBase<SignalAPILib.PathCentralService.NGSServiceSoap>, SignalAPILib.PathCentralService.NGSServiceSoap {
        
        public NGSServiceSoapClient() {
        }
        
        public NGSServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NGSServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NGSServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NGSServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet LabMessageQueryXML_GetByAccessionID(int AccessionID, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByAccessionID(AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByAccessionIDAsync(int AccessionID, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByAccessionIDAsync(AccessionID, RequestMessage);
        }
        
        public System.Data.DataSet LabMessageQueryXML_GetByCaseID(int CaseID, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByCaseID(CaseID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByCaseIDAsync(int CaseID, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByCaseIDAsync(CaseID, RequestMessage);
        }
        
        public System.Data.DataSet LabMessageQueryXML_GetByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabMessageQueryXML_GetByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.LabMessageQueryXML_GetByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet LabMessageXML_GetByCompletedDate(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.LabMessageXML_GetByCompletedDate(FromDate, EndDate, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabMessageXML_GetByCompletedDateAsync(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.LabMessageXML_GetByCompletedDateAsync(FromDate, EndDate, RequestMessage);
        }
        
        public System.Data.DataSet LabMessageXML_GetByOrderedDate(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.LabMessageXML_GetByOrderedDate(FromDate, EndDate, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LabMessageXML_GetByOrderedDateAsync(System.DateTime FromDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.LabMessageXML_GetByOrderedDateAsync(FromDate, EndDate, RequestMessage);
        }
        
        public System.Data.DataSet GetChangedEntityIDs_ByEntityType(System.DateTime StartDate, System.DateTime EndDate, string EntityType, string RequestMessage) {
            return base.Channel.GetChangedEntityIDs_ByEntityType(StartDate, EndDate, EntityType, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChangedEntityIDs_ByEntityTypeAsync(System.DateTime StartDate, System.DateTime EndDate, string EntityType, string RequestMessage) {
            return base.Channel.GetChangedEntityIDs_ByEntityTypeAsync(StartDate, EndDate, EntityType, RequestMessage);
        }
        
        public System.Data.DataSet AccessRequisitionForm_ByAccessionID(int AccessionID, string RequestMessage) {
            return base.Channel.AccessRequisitionForm_ByAccessionID(AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AccessRequisitionForm_ByAccessionIDAsync(int AccessionID, string RequestMessage) {
            return base.Channel.AccessRequisitionForm_ByAccessionIDAsync(AccessionID, RequestMessage);
        }
        
        public System.Data.DataSet GetClients_ByClientID(int ClientID, string RequestMessage) {
            return base.Channel.GetClients_ByClientID(ClientID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClients_ByClientIDAsync(int ClientID, string RequestMessage) {
            return base.Channel.GetClients_ByClientIDAsync(ClientID, RequestMessage);
        }
        
        public System.Data.DataSet GetClients_ByClientName(string ClientName, string RequestMessage) {
            return base.Channel.GetClients_ByClientName(ClientName, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClients_ByClientNameAsync(string ClientName, string RequestMessage) {
            return base.Channel.GetClients_ByClientNameAsync(ClientName, RequestMessage);
        }
        
        public System.Data.DataSet GetPatients_ByDOB(System.DateTime DOB, string RequestMessage) {
            return base.Channel.GetPatients_ByDOB(DOB, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPatients_ByDOBAsync(System.DateTime DOB, string RequestMessage) {
            return base.Channel.GetPatients_ByDOBAsync(DOB, RequestMessage);
        }
        
        public System.Data.DataSet ICD9Diagnosis_GetByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.ICD9Diagnosis_GetByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ICD9Diagnosis_GetByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.ICD9Diagnosis_GetByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet ICD10Diagnosis_GetByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.ICD10Diagnosis_GetByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ICD10Diagnosis_GetByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.ICD10Diagnosis_GetByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet ICDDiagnosis_GetByTestOrderID(int TestOrderID, string RequestMessage) {
            return base.Channel.ICDDiagnosis_GetByTestOrderID(TestOrderID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ICDDiagnosis_GetByTestOrderIDAsync(int TestOrderID, string RequestMessage) {
            return base.Channel.ICDDiagnosis_GetByTestOrderIDAsync(TestOrderID, RequestMessage);
        }
        
        public System.Data.DataSet Entities_GetByTestOrderID(int TestOrderID, string RequestMessage) {
            return base.Channel.Entities_GetByTestOrderID(TestOrderID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> Entities_GetByTestOrderIDAsync(int TestOrderID, string RequestMessage) {
            return base.Channel.Entities_GetByTestOrderIDAsync(TestOrderID, RequestMessage);
        }
        
        public System.Data.DataSet TestOrderDetails_GetByCaseID(int Caseid, string RequestMessage) {
            return base.Channel.TestOrderDetails_GetByCaseID(Caseid, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TestOrderDetails_GetByCaseIDAsync(int Caseid, string RequestMessage) {
            return base.Channel.TestOrderDetails_GetByCaseIDAsync(Caseid, RequestMessage);
        }
        
        public System.Data.DataSet TestOrderDetails_GetByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.TestOrderDetails_GetByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TestOrderDetails_GetByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.TestOrderDetails_GetByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet GetResult_ByTestOrderID_ComponentCode(int TestOrderID, string ComponentCode, string RequestMessage) {
            return base.Channel.GetResult_ByTestOrderID_ComponentCode(TestOrderID, ComponentCode, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetResult_ByTestOrderID_ComponentCodeAsync(int TestOrderID, string ComponentCode, string RequestMessage) {
            return base.Channel.GetResult_ByTestOrderID_ComponentCodeAsync(TestOrderID, ComponentCode, RequestMessage);
        }
        
        public System.Data.DataSet GetAllResults(string CaseNo, string RequestMessage) {
            return base.Channel.GetAllResults(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllResultsAsync(string CaseNo, string RequestMessage) {
            return base.Channel.GetAllResultsAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet OrderedSpecimenDetails_ByTestOrderID(int TestOrderID, string RequestMessage) {
            return base.Channel.OrderedSpecimenDetails_ByTestOrderID(TestOrderID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> OrderedSpecimenDetails_ByTestOrderIDAsync(int TestOrderID, string RequestMessage) {
            return base.Channel.OrderedSpecimenDetails_ByTestOrderIDAsync(TestOrderID, RequestMessage);
        }
        
        public System.Data.DataSet TestOrderSpecimenID_GetByCaseID(int CaseID, string RequestMessage) {
            return base.Channel.TestOrderSpecimenID_GetByCaseID(CaseID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> TestOrderSpecimenID_GetByCaseIDAsync(int CaseID, string RequestMessage) {
            return base.Channel.TestOrderSpecimenID_GetByCaseIDAsync(CaseID, RequestMessage);
        }
        
        public System.Data.DataSet GetAllEntity_ByOrderDate(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.GetAllEntity_ByOrderDate(StartDate, EndDate, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllEntity_ByOrderDateAsync(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.GetAllEntity_ByOrderDateAsync(StartDate, EndDate, RequestMessage);
        }
        
        public System.Data.DataSet GetAllEntity_ByAccessionID(int AccessionID, string RequestMessage) {
            return base.Channel.GetAllEntity_ByAccessionID(AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllEntity_ByAccessionIDAsync(int AccessionID, string RequestMessage) {
            return base.Channel.GetAllEntity_ByAccessionIDAsync(AccessionID, RequestMessage);
        }
        
        public System.Data.DataSet GetPayorDetail_ByAccessionID(int AccessionID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByAccessionID(AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByAccessionIDAsync(int AccessionID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByAccessionIDAsync(AccessionID, RequestMessage);
        }
        
        public System.Data.DataSet GetPayorDetail_ByCaseID(int CaseID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByCaseID(CaseID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByCaseIDAsync(int CaseID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByCaseIDAsync(CaseID, RequestMessage);
        }
        
        public System.Data.DataSet GetPayorDetail_ByPayorID(int PayorID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByPayorID(PayorID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPayorDetail_ByPayorIDAsync(int PayorID, string RequestMessage) {
            return base.Channel.GetPayorDetail_ByPayorIDAsync(PayorID, RequestMessage);
        }
        
        public System.Data.DataSet GetSpecimen_ByCaseID(int CaseID, string RequestMessage) {
            return base.Channel.GetSpecimen_ByCaseID(CaseID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_ByCaseIDAsync(int CaseID, string RequestMessage) {
            return base.Channel.GetSpecimen_ByCaseIDAsync(CaseID, RequestMessage);
        }
        
        public System.Data.DataSet GetSpecimen_ByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.GetSpecimen_ByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_ByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.GetSpecimen_ByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet GetSpecimen_BySpecimenID(int SpecimenID, string RequestMessage) {
            return base.Channel.GetSpecimen_BySpecimenID(SpecimenID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetSpecimen_BySpecimenIDAsync(int SpecimenID, string RequestMessage) {
            return base.Channel.GetSpecimen_BySpecimenIDAsync(SpecimenID, RequestMessage);
        }
        
        public System.Data.DataSet GetAllFacility_ByFacilityName(string FacilityName, string RequestMessage) {
            return base.Channel.GetAllFacility_ByFacilityName(FacilityName, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllFacility_ByFacilityNameAsync(string FacilityName, string RequestMessage) {
            return base.Channel.GetAllFacility_ByFacilityNameAsync(FacilityName, RequestMessage);
        }
        
        public int Facility_Create_Update(
                    int FacilityID, 
                    string FacilityName, 
                    int ClientID, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string PhoneTypeBusiness, 
                    string BusinessPhoneNumber, 
                    string BusinessExtension, 
                    string PhoneTypeFax, 
                    string FaxPhoneNumber, 
                    string ContactName, 
                    int UserID, 
                    string RequestMessage) {
            return base.Channel.Facility_Create_Update(FacilityID, FacilityName, ClientID, Address1, Address2, Address3, City, State, Country, Zip, PhoneTypeBusiness, BusinessPhoneNumber, BusinessExtension, PhoneTypeFax, FaxPhoneNumber, ContactName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Facility_Create_UpdateAsync(
                    int FacilityID, 
                    string FacilityName, 
                    int ClientID, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string City, 
                    string State, 
                    string Country, 
                    string Zip, 
                    string PhoneTypeBusiness, 
                    string BusinessPhoneNumber, 
                    string BusinessExtension, 
                    string PhoneTypeFax, 
                    string FaxPhoneNumber, 
                    string ContactName, 
                    int UserID, 
                    string RequestMessage) {
            return base.Channel.Facility_Create_UpdateAsync(FacilityID, FacilityName, ClientID, Address1, Address2, Address3, City, State, Country, Zip, PhoneTypeBusiness, BusinessPhoneNumber, BusinessExtension, PhoneTypeFax, FaxPhoneNumber, ContactName, UserID, RequestMessage);
        }
        
        public System.Data.DataSet FindDoctors_byName(string FirstName, string LastName, string RequestMessage) {
            return base.Channel.FindDoctors_byName(FirstName, LastName, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FindDoctors_byNameAsync(string FirstName, string LastName, string RequestMessage) {
            return base.Channel.FindDoctors_byNameAsync(FirstName, LastName, RequestMessage);
        }
        
        public System.Data.DataSet FindDoctor_byDoctorID(int DoctorID, string RequestMessage) {
            return base.Channel.FindDoctor_byDoctorID(DoctorID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FindDoctor_byDoctorIDAsync(int DoctorID, string RequestMessage) {
            return base.Channel.FindDoctor_byDoctorIDAsync(DoctorID, RequestMessage);
        }
        
        public System.Data.DataSet FindDoctor_byNPI(string NPI, string RequestMessage) {
            return base.Channel.FindDoctor_byNPI(NPI, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FindDoctor_byNPIAsync(string NPI, string RequestMessage) {
            return base.Channel.FindDoctor_byNPIAsync(NPI, RequestMessage);
        }
        
        public System.Data.DataSet GetPatient_ByMRN(string MRN, string RequestMessage) {
            return base.Channel.GetPatient_ByMRN(MRN, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByMRNAsync(string MRN, string RequestMessage) {
            return base.Channel.GetPatient_ByMRNAsync(MRN, RequestMessage);
        }
        
        public System.Data.DataSet GetPatient_ByPatientStatus(string PatientStatus, string RequestMessage) {
            return base.Channel.GetPatient_ByPatientStatus(PatientStatus, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByPatientStatusAsync(string PatientStatus, string RequestMessage) {
            return base.Channel.GetPatient_ByPatientStatusAsync(PatientStatus, RequestMessage);
        }
        
        public System.Data.DataSet GetPatient_ByPatientID(int PatientID, string RequestMessage) {
            return base.Channel.GetPatient_ByPatientID(PatientID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPatient_ByPatientIDAsync(int PatientID, string RequestMessage) {
            return base.Channel.GetPatient_ByPatientIDAsync(PatientID, RequestMessage);
        }
        
        public System.Data.DataSet GetCases_ByCaseNo(string CaseNo, string RequestMessage) {
            return base.Channel.GetCases_ByCaseNo(CaseNo, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCases_ByCaseNoAsync(string CaseNo, string RequestMessage) {
            return base.Channel.GetCases_ByCaseNoAsync(CaseNo, RequestMessage);
        }
        
        public System.Data.DataSet GetCaseNo_ByCaseID(int CaseID, string RequestMessage) {
            return base.Channel.GetCaseNo_ByCaseID(CaseID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCaseNo_ByCaseIDAsync(int CaseID, string RequestMessage) {
            return base.Channel.GetCaseNo_ByCaseIDAsync(CaseID, RequestMessage);
        }
        
        public System.Data.DataSet GetAllCaseNo_ByOrderDateRange(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.GetAllCaseNo_ByOrderDateRange(StartDate, EndDate, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllCaseNo_ByOrderDateRangeAsync(System.DateTime StartDate, System.DateTime EndDate, string RequestMessage) {
            return base.Channel.GetAllCaseNo_ByOrderDateRangeAsync(StartDate, EndDate, RequestMessage);
        }
        
        public int Save_HomePlanInsurance(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_HomePlanInsurance(CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Save_HomePlanInsuranceAsync(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_HomePlanInsuranceAsync(CompanyName, UserID, RequestMessage);
        }
        
        public int Update_HomePlanInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_HomePlanInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Update_HomePlanInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_HomePlanInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int Delete_HomePlanInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_HomePlanInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Delete_HomePlanInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_HomePlanInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int Save_PayorGroupInsurance(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_PayorGroupInsurance(CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Save_PayorGroupInsuranceAsync(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_PayorGroupInsuranceAsync(CompanyName, UserID, RequestMessage);
        }
        
        public int Update_PayorGroupInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_PayorGroupInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Update_PayorGroupInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_PayorGroupInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int Delete_PayorGroupInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_PayorGroupInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Delete_PayorGroupInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_PayorGroupInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int Save_PlanTypeInsurance(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_PlanTypeInsurance(CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Save_PlanTypeInsuranceAsync(string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Save_PlanTypeInsuranceAsync(CompanyName, UserID, RequestMessage);
        }
        
        public int Update_PlanTypeInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_PlanTypeInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Update_PlanTypeInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Update_PlanTypeInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int Delete_PlanTypeInsurance(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_PlanTypeInsurance(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> Delete_PlanTypeInsuranceAsync(int InsuranceID, string CompanyName, int UserID, string RequestMessage) {
            return base.Channel.Delete_PlanTypeInsuranceAsync(InsuranceID, CompanyName, UserID, RequestMessage);
        }
        
        public int PatientInsuranceInfo_Create_Update(
                    int PatientInsuranceID, 
                    int PatientID, 
                    int InsuranceID, 
                    int HomePlanInsuranceID, 
                    int PayorGroupInsuranceID, 
                    int PlanTypeInsuranceID, 
                    int Rank, 
                    string PolicyNo, 
                    string GroupNo, 
                    string AuthorizationNo, 
                    string ProviderPatientID, 
                    string LastName, 
                    string FirstName, 
                    string MiddleName, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    System.DateTime DOB, 
                    string SSN, 
                    string Relation, 
                    string phonenumber, 
                    string Referral, 
                    int UserID, 
                    int AccessionID, 
                    string RequestMessage) {
            return base.Channel.PatientInsuranceInfo_Create_Update(PatientInsuranceID, PatientID, InsuranceID, HomePlanInsuranceID, PayorGroupInsuranceID, PlanTypeInsuranceID, Rank, PolicyNo, GroupNo, AuthorizationNo, ProviderPatientID, LastName, FirstName, MiddleName, Address1, Address2, City, State, Zip, DOB, SSN, Relation, phonenumber, Referral, UserID, AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task<int> PatientInsuranceInfo_Create_UpdateAsync(
                    int PatientInsuranceID, 
                    int PatientID, 
                    int InsuranceID, 
                    int HomePlanInsuranceID, 
                    int PayorGroupInsuranceID, 
                    int PlanTypeInsuranceID, 
                    int Rank, 
                    string PolicyNo, 
                    string GroupNo, 
                    string AuthorizationNo, 
                    string ProviderPatientID, 
                    string LastName, 
                    string FirstName, 
                    string MiddleName, 
                    string Address1, 
                    string Address2, 
                    string City, 
                    string State, 
                    string Zip, 
                    System.DateTime DOB, 
                    string SSN, 
                    string Relation, 
                    string phonenumber, 
                    string Referral, 
                    int UserID, 
                    int AccessionID, 
                    string RequestMessage) {
            return base.Channel.PatientInsuranceInfo_Create_UpdateAsync(PatientInsuranceID, PatientID, InsuranceID, HomePlanInsuranceID, PayorGroupInsuranceID, PlanTypeInsuranceID, Rank, PolicyNo, GroupNo, AuthorizationNo, ProviderPatientID, LastName, FirstName, MiddleName, Address1, Address2, City, State, Zip, DOB, SSN, Relation, phonenumber, Referral, UserID, AccessionID, RequestMessage);
        }
        
        public void PatientInsuranceInfo_Delete(int PatientInsuranceID, int AccessionID, string RequestMessage) {
            base.Channel.PatientInsuranceInfo_Delete(PatientInsuranceID, AccessionID, RequestMessage);
        }
        
        public System.Threading.Tasks.Task PatientInsuranceInfo_DeleteAsync(int PatientInsuranceID, int AccessionID, string RequestMessage) {
            return base.Channel.PatientInsuranceInfo_DeleteAsync(PatientInsuranceID, AccessionID, RequestMessage);
        }
    }
}
